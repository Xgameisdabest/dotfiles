#!/usr/bin/bash

goback="Back 󰌍 "
quit="Exit 󰈆 "

playback_opt="playback"
outputdev_opt="output devices"
inputdev_opt="input devices"
devconfig_opt="device configuration"

opt_list="$playback_opt\n$outputdev_opt\n$inputdev_opt\n$devconfig_opt\n$quit"

ouput_dev_card=$(pactl list cards | grep "device.name" | sed 's/device.name =//g' | sed 's/"//g' | sed 's/\t//g' | sed 's/ //g')
current_output_dev=$(pactl list sinks short | grep RUNNING | awk '{print $2}' | sed 's/bluez_output.//g' |  sed 's/\..*//')
echo $current_ouput_dev

main_menu(){
	select=$(echo -e "$opt_list"  | rofi -dmenu -i -theme-str 'window {height: 320px; width: 400px;}' -theme-str "listview {columns: 1; layout: vertical;}" -p " Settings   ")
	
	case $select in
		$playback_opt)
			playback_func
			;;
		$outputdev_opt)
			outputdev_func
			;;
		$inputdev_opt)
			inputdev_func
			;;
		$devconfig_opt)
			devconfig_func
			;;
	esac
}

playback_func(){
	mute="x"
	up="+"
	minus="-"
	select_playback=$(echo -e "$up\n$minus\n$mute\n$goback"  | rofi -dmenu -i -theme-str 'window {height: 320px; width: 400px;}' -theme-str "listview {columns: 1; layout: vertical;}" -p " playback   ")
	
	case $select_playback in
		$up)
			~/.config/dunst/volume.sh volume_up
			playback_func
		;;
		$minus)
			~/.config/dunst/volume.sh volume_down
			playback_func
		;;
		$mute)
			~/.config/dunst/volume.sh volume_mute
			playback_func
		;;
		$goback)
			main_menu
		;;
	esac

}

outputdev_func(){
	outputdev_list=$(pactl list | grep node.name | grep -E "(alsa_output|bluez_output)" | sed 's/"//g' | sed 's/node.name = //g' | uniq -u | sed 's/alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.//g' | sed 's/bluez_output.//g' | sed 's/\t//g' | sort | uniq)
	select_output=$(echo -e "$outputdev_list\n$goback" | rofi -dmenu -i -theme-str "listview {columns: 1; layout: vertical;}" -p " outputdev   ")
	#echo $select_output
	if [[ $select_output == $goback ]]; then
		main_menu
	else
		first_try=$(pactl set-default-sink alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.$select_output)
		echo $first_try
		if [[ $first_try == "" ]]; then
			second_try=$(pactl set-default-sink bluez_output.$select_output)
		fi
	fi
}

inputdev_func(){
	inputdev_list=$(pactl list | grep node.name | grep -E "(alsa_input|bluez_input)" | sed 's/"//g' | sed 's/node.name = //g' | uniq -u | sed 's/alsa_input.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.//g' | sed 's/bluez_input.//g' | sed 's/\t//g' | sort | uniq)
	select_input=$(echo -e "$inputdev_list\n$goback" | rofi -dmenu -i -theme-str "listview {columns: 1; layout: vertical;}" -p " inputdev   ")
	#echo $select_input
	if [[ $select_input == $goback ]]; then
		main_menu
	else
	first_try=$(pactl set-default-source alsa_input.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.$select_input)
		echo $first_try
		if [[ $first_try == "" ]]; then
			second_try=$(pactl set-default-source bluez_input.$select_input)
		fi
	fi
}

devconfig_func(){
	devconfig_list=$(pactl list cards | grep -A 15 "Profiles" | sed -n '/Profiles:/,/Active Profile:/p' | grep -E "(Profile:|Active Profile:|available:)" | sed -E 's/^[ \t]*//; s/\(available: .*\)//' | sed 's/Profile: //' | grep -v "Active" | awk -F':' '{print $1}')
	select_profile=$(echo -e "$devconfig_list\n$goback"  | rofi -dmenu -i -theme-str "listview {columns: 1; layout: vertical;}" -p " devconfig   ")
	if [[ $select_profile == $goback ]]; then
		main_menu
	fi
	first_try=$(pactl set-card-profile alsa_card.pci-0000_00_1f.3-platform-skl_hda_dsp_generic "$select_profile")
	if [[ $first_try == "" ]]; then
		second_try=$(pactl set-card-profile bluez_card.$current_output_dev "$select_profile")
	fi
}

main_menu
